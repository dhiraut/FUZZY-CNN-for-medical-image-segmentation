# -*- coding: utf-8 -*-
"""segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gcBK-WUEn5FZIes7uvmAhn71qjCmx08S
"""

import numpy as np
from fuzzification import fuzzify_image

def fuzzy_cnn_segmentation(image, cnn_model):
    fuzzified_layers = fuzzify_image(image)
    output = np.zeros(image.shape)
    for fuzz_layer in fuzzified_layers:
        cnn_output = cnn_model.forward(fuzz_layer)
        cnn_output_resized = np.pad(
            cnn_output,
            ((output.shape[0] - cnn_output.shape[0]) // 2,
             (output.shape[1] - cnn_output.shape[1]) // 2),
            mode='constant'
        )
        output += cnn_output_resized[:image.shape[0], :image.shape[1]]
    return (output > np.mean(output)).astype(int)

def traditional_cnn_segmentation(image, cnn_model):
    cnn_output = cnn_model.forward(image)
    cnn_output_resized = np.pad(
        cnn_output,
        ((image.shape[0] - cnn_output.shape[0]) // 2,
         (image.shape[1] - cnn_output.shape[1]) // 2),
        mode='constant'
    )
    return (cnn_output_resized[:image.shape[0], :image.shape[1]] > np.mean(cnn_output_resized)).astype(int)

